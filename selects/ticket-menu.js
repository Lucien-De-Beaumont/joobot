const Discord = require('discord.js');
const config = require('../config')
const Logger = require("../utils/Logger");

module.exports = {
    name: 'ticket-menu',
    async runInteraction(client, interaction) {

        const embed = new Discord.MessageEmbed()
            .setTitle(`Envoyer un ticket √† l'√©quipe de mod√©ration`)
            .setDescription(`Utilisez le bouton ci-dessous pour envoyer un ticket √† notre √©quipe de mod√©ration, qui l'√©tudiera dans les plus brefs d√©lais !`)

        const ticketMenu = new Discord.MessageActionRow()
            .addComponents(
                new Discord.MessageSelectMenu()
                    .setCustomId('ticket-menu')
                    .setPlaceholder('S√©lectionner une raison...')
                    .addOptions([
                        {
                            label: 'Demande de cr√©ation de lieu',
                            description: 'Demander la cr√©ation d\'un lieu pour RP.',
                            value: 'locationcreate',
                            emoji: 'üìç'
                        },
                        {
                            label: 'Question',
                            description: 'Poser une question √† l\'√©quipe de mod√©ration.',
                            value: 'question',
                            emoji: '‚ùì'
                        },
                        {
                            label: 'Signalement',
                            description: 'Signaler un membre, une faille ou un dysfonctionnement.',
                            value: 'report',
                            emoji: '‚ö†Ô∏è'
                        },
                        {
                            label: 'Id√©e',
                            description: 'Proposer une id√©e pour le serveur.',
                            value: 'lightbulb',
                            emoji: 'üí°'
                        },

                    ]),
            )

        let description
        let title

        switch (interaction.values[0]) {
            case 'locationcreate':
                description = `Bonjour <@${interaction.member.id}> !\n\nMerci d'avoir contact√© l'√©quipe de mod√©ration pour votre **demande d'ajout d'un lieu RP**. \nAfin que cette derni√®re ait toutes les chances d'√™tre accept√©e, veuillez d√©crire votre lieu, la zone dans laquelle il pourra√Æt √™tre inclus, une image pour l'accompagner, son utilit√© [...].\n\nNotre √©quipe a par ailleurs **d√©j√†** √©t√© notifi√©e de votre demande d'ajout de lieu, merci donc de **ne pas** les mentionner. Une r√©ponse vous sera donn√©e dans les plus brefs d√©lais.\n\nBonne journ√©e √† vous !`;
                title = `Demande de cr√©ation de lieu`
                break;
            case 'question':
                description = `Bonjour <@${interaction.member.id}> !\n\nMerci d'avoir contact√© l'√©quipe de mod√©ration pour la **question** que vous semblez avoir. \n\nNous vous √©coutons, quelle est votre question ?\n\nNotre √©quipe a par ailleurs **d√©j√†** √©t√© notifi√©e que vous aviez une question, merci donc de **ne pas** les mentionner. Une r√©ponse vous sera donn√©e dans les plus brefs d√©lais.\n\nBonne journ√©e √† vous !`;
                title = `Question`
                break;
            case 'report':
                description = `Bonjour <@${interaction.member.id}> !\n\nMerci d'avoir contact√© l'√©quipe de mod√©ration concernant votre **signalement**. \n\nNous sommes sinc√®rement d√©sol√©s que vous ayez √† signaler un probl√®me. Nous ferons √©videmment de notre mieux pour r√©gler √ßa le plus vite possible.\nAfin d'acc√©lerer la vitesse de r√©solution de votre probl√®me, merci de nous d√©crire le plus pr√©cis√©ment possible votre souci.\n\nNotre √©quipe a par ailleurs **d√©j√†** √©t√© notifi√©e que vous aviez un probl√®me, merci donc de **ne pas** les mentionner. Une r√©ponse et une solution vous seront apport√©es dans les plus brefs d√©lais.\n\nBonne journ√©e √† vous !`;
                title = `Signalement`
                break;
            case 'lightbulb':
                description = `Bonjour <@${interaction.member.id}> !\n\nMerci d'avoir contact√© l'√©quipe de mod√©ration pour nous faire part de votre **id√©e**. \n\nAfin de pouvoir faciliter le d√©bat et la compr√©hension, merci de nous d√©crire le plus pr√©cis√©ment possible votre id√©e.\n\nNotre √©quipe a par ailleurs **d√©j√†** √©t√© notifi√©e que vous aviez un probl√®me, merci donc de **ne pas** les mentionner. Une r√©ponse et une solution vous seront apport√©es dans les plus brefs d√©lais.\n\nBonne journ√©e √† vous !`;
                title = `Id√©e`
                break;

        }
        client.channels.cache.get(config.channels['ticket']).messages.fetch({ limit: 1 }).then(messages => {
            let lastMessage = messages.first();
            client.channels.cache.get(config.channels['ticket']).messages.fetch(`${lastMessage.id}`).then(message => message.edit({ embeds: [embed], components: [ticketMenu] }))
        })

        const embed2 = new Discord.MessageEmbed()
            .setTitle(`Nouveau ticket : ${title}`)
            .setDescription(`${description}`)
            .setThumbnail(`${interaction.guild.iconURL()}`)
            .setAuthor({ name: interaction.member.displayName, iconURL: interaction.member.displayAvatarURL() })
            .setTimestamp()

        const buttons = new Discord.MessageActionRow()
            .addComponents(
                new Discord.MessageButton()
                    .setCustomId('close-ticket')
                    .setLabel('Fermer le ticket')
                    .setEmoji('üîê')
                    .setStyle('DANGER')
            )

        let permsArray = [{
            id: interaction.guild.id,
            deny: ['VIEW_CHANNEL'],
        },
        {
            id: interaction.member.id,
            allow: ['VIEW_CHANNEL'],
        }]
        for (element of config.perms['wholeStaff']) {
            let perms = new Object()
            perms.id = eval("'" + element + "';")
            perms.allow = ["VIEW_CHANNEL"]
            permsArray.push(perms)
        }
        client.channels.cache.get(config.channels['category-ticket']).createChannel(
            `ticket-${interaction.member.displayName}-${Math.round(Math.random() * 100)}`, {
            permissionOverwrites: permsArray,
        }).then(channel => {
            channel.send({ embeds: [embed2], components: [buttons] });
            interaction.reply({ content: `Votre ticket ( <#${channel.id}> ) a bien √©t√© cr√©√© !\nUn staff s'occupera de vous d√®s que possible !`, ephemeral: true });
            channel.send('<@&' + config.perms['wholeStaff'].join('>, <@&') + '>').then(msg => {
                msg.delete()
            })
        })

    }
};